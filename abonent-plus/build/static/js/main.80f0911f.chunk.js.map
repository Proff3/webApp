{"version":3,"sources":["Row.js","THead.js","ModalField.js","ChangingRowTable.js","AddingRowTable.js","Table.js","LogInButton.js","Authentification.js","SignUpButton.js","Registration.js","Router.js","NavbarLinks.js","NavbarLogin.js","Main.js","App.js","index.js"],"names":["Row","props","state","isDeleted","handleElementChange","bind","handleDelete","handleChangeRow","e","this","rowNum","value","key","idx","setState","prevState","data","Object","entries","item","push","map","includes","slice","style","onClick","React","Component","THead","handleSortingColors","target","classList","contains","toggle","document","querySelectorAll","forEach","thead","remove","handleSorting","titles","title","id","ModalField","foreignKeys","isLoading","handleChange","table","toLowerCase","fetch","headers","then","res","json","result","recordset","row","values","undefined","action","catch","err","console","log","class","onChange","type","placeholder","defaultValue","changingValuesTable","changingRow","pkField","handleUpdating","handleCommitTransaction","rows","numRowChanging","body","assign","login","localStorage","getItem","method","JSON","stringify","enviroment","status","updateTable","handleClosingModal","alert","primaryKeys","filter","length","mes","getElementById","focus","getTitle","aria-label","element","addingRowTable","handleAdding","keys","sqlMessage","split","sortingRows","sortedBy","sort","a","b","sortDirection","Table","error","isLoaded","response","isAdding","handleAddingRow","createTransaction","commitTransaction","message","call","ChangingRowTable","className","AddingRowTable","LogInButton","isLoggedIn","handleClick","pass","ok","setItem","changeAuth","isLoggedId","to","children","Authentification","href","aria-hidden","isRegistred","Registration","SignUpButton","Router","auth","path","NavbarLinks","navLinkStyle","color","textDecoration","activeStyle","changeTable","NavbarLogin","logoutHandler","removeItem","Main","isAuthentificated","handleBurger","querySelector","role","aria-expanded","data-target","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.80f0911f.chunk.js","sourcesContent":["import React from \"react\";\r\nclass Row extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isDeleted: false }\r\n        this.handleElementChange = this.handleElementChange.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleChangeRow = this.handleChangeRow.bind(this);\r\n    }\r\n    handleChangeRow(e) {\r\n        this.props.handleChangeRow(this.props.rowNum);\r\n    }\r\n\r\n    handleElementChange(value, key) {\r\n        this.props.handleChangeRow(value, key, this.props.idx);\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.handleDelete(this.props.idx);\r\n        this.setState(prevState => ({ isDeleted: !prevState.isDeleted }))\r\n    }\r\n\r\n    render() {\r\n        let data = [];\r\n        for (let [key, value] of Object.entries(this.props.item)) {\r\n            if (key === \"EXECUTED\") value = value === 1 ? true : false;\r\n            data.push({ key, value });\r\n        }\r\n        return <tr>{data.map((item, idx) => {\r\n            let value = item.key.includes(\"DATE\") && item.value !== null ? item.value.slice(0, 10) : item.value;\r\n            return idx === 0 ? <th style={{ \"cursor\": \"pointer\" }} key={idx} onClick={this.handleChangeRow}>{value}</th> : <td style={{ \"cursor\": \"pointer\" }} key={idx} onClick={this.handleChangeRow}>{`${value}`}</td>\r\n        })}</tr>\r\n    }\r\n}\r\n\r\nexport default Row;","import React from \"react\";\r\nclass THead extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isDeleted: false }\r\n        this.handleElementChange = this.handleElementChange.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleSortingColors = this.handleSortingColors.bind(this);\r\n    }\r\n\r\n    handleSortingColors(e) {\r\n        if (e.target.classList.contains(\"has-background-primary\")) {\r\n            e.target.classList.toggle(\"has-background-primary\");\r\n            e.target.classList.toggle(\"has-background-warning\");\r\n        } else if (e.target.classList.contains(\"has-background-warning\")) {\r\n            e.target.classList.toggle(\"has-background-warning\");\r\n        } else {\r\n            let theads = document.querySelectorAll(\"#THead\");\r\n            theads.forEach(thead => thead.classList.remove(\"has-background-primary\", \"has-background-warning\"));\r\n            e.target.classList.toggle(\"has-background-primary\");\r\n        }\r\n        this.props.handleSorting(e);\r\n    }\r\n\r\n    handleElementChange(value, key) {\r\n        this.props.handleChangeRow(value, key, this.props.idx);\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.handleDelete(this.props.idx);\r\n        this.setState(prevState => ({ isDeleted: !prevState.isDeleted }))\r\n    }\r\n\r\n    render() {\r\n        let titles = this.props.titles;\r\n        return titles.map((item, idx) => <th title={item} key={idx} onClick={this.handleSortingColors} style={{ \"cursor\": \"pointer\" }} id={\"THead\"}>{item}</th>)\r\n    }\r\n}\r\nexport default THead;","import React from \"react\";\r\n\r\nclass ModalField extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            foreignKeys: [],\r\n            isLoading: true,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let value = e.target.value === \"true\" ? 1 : e.target.value === \"false\" ? 0 : e.target.value;\r\n        e.target.classList.remove(\"is-danger\")\r\n        this.props.handleChange(this.props.idx, value);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.title.includes(\"CD\") && this.props.idx !== 0) {\r\n            let table = this.props.title.slice(0, -2).toLowerCase();\r\n            if (table === \"account\") table = \"abonent\";\r\n            if (table === \"failure\") table = \"disrepair\";\r\n            fetch(`/changeRow/${table}`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n            })\r\n                .then(res => res.json())\r\n                .then(result => {\r\n                    let foreignKeys = [];\r\n                    result.recordset.forEach(row => foreignKeys.push(Object.values(row)[0]));\r\n                    this.setState({ foreignKeys, isLoading: false });\r\n                })\r\n                .then(() => {\r\n                    if (this.state.foreignKeys[0] !== undefined && this.props.value === null && this.props.action === \"add\") this.props.handleChange(this.props.idx, this.state.foreignKeys[0]);\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let value = this.props.title.includes(\"DATE\") && this.props.value !== null ? this.props.value.slice(0, 10) : this.props.value;\r\n        if (this.props.title === \"EXECUTED\") value = value === 1 ? true : false;\r\n        if (this.props.title.includes(\"CD\") && this.props.idx !== 0) {\r\n            let foreignKeys = this.state.foreignKeys;\r\n            return (\r\n                <div class=\"field\">\r\n                    <label class=\"label\" style={{ \"textAlign\": \"left\" }}>{this.props.title}</label>\r\n                    <div class=\"control\">\r\n                        <div class=\"select\" style={{ \"width\": \"100%\" }}>\r\n                            <select id={this.props.title} style={{ \"width\": \"100%\" }} value={value} onChange={this.handleChange}>\r\n                                {foreignKeys.map(key => {\r\n                                    return <option value={key} key={key}>{key}</option>\r\n                                })}\r\n                                {this.props.table !== \"nachislSumma\" && this.props.table !== \"paySumma\" ? <option value={null}>null</option> : null}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        if (this.props.title === \"EXECUTED\" && this.props.idx !== 0) {\r\n            return (\r\n                <div class=\"field\">\r\n                    <label class=\"label\" style={{ \"textAlign\": \"left\" }}>{this.props.title}</label>\r\n                    <div class=\"control\">\r\n                        <div class=\"select\" style={{ \"width\": \"100%\" }}>\r\n                            <select id={this.props.title} style={{ \"width\": \"100%\" }} value={value} onChange={this.handleChange}>\r\n                                <option value={\"true\"} key={\"true\"}>true</option>\r\n                                <option value={\"false\"} key={\"false\"}>false</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div class=\"field\">\r\n                <label class=\"label\" style={{ \"textAlign\": \"left\" }}>{this.props.title}</label>\r\n                <div class=\"control\">\r\n                    <input\r\n                        class=\"input\"\r\n                        type={\r\n                            value === 'number' || this.props.idx === 0 ? \"number\" :\r\n                                this.props.title.includes(\"DATE\") ? \"date\" : \"text\"\r\n                        }\r\n                        placeholder=\"Введите значение\"\r\n                        defaultValue={value}\r\n                        onChange={this.handleChange}\r\n                        id={this.props.title}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalField","import React from \"react\";\r\nimport ModalField from './ModalField'\r\n\r\nfunction getTitle(table) {\r\n    switch (table) {\r\n        case \"abonent\":\r\n            return \"абонента\";\r\n        case \"executor\":\r\n            return \"исполнителя\";\r\n        case \"disrepair\":\r\n            return \"неисправности\";\r\n        case \"street\":\r\n            return \"улицы\";\r\n        case \"service\":\r\n            return \"услуги\";\r\n        case \"nachislSumma\":\r\n            return \"начисления\";\r\n        case \"paySumma\":\r\n            return \"оплаты\";\r\n        case \"request\":\r\n            return \"заявки\";\r\n        default:\r\n            return \"строки\"\r\n    }\r\n}\r\n\r\nclass changingValuesTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { changingRow: [], pkField: null };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUpdating = this.handleUpdating.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleCommitTransaction = this.handleCommitTransaction.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let changingRow = [];\r\n        for (let [key, value] of Object.entries(this.props.rows[this.props.numRowChanging])) {\r\n            changingRow.push({ key, value });\r\n        };\r\n        let pkField = changingRow[0].value;\r\n        this.setState({ changingRow, pkField });\r\n        let body = Object.assign({}, { changingRow, pkField, login: localStorage.getItem('login') });\r\n        fetch(`/fakeUpdate/${this.props.table}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(body),\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    handleChange(idx, value) {\r\n        let changingRow = this.state.changingRow;\r\n        changingRow[idx].value = typeof changingRow[idx].value === 'number' ? +value : value;\r\n        this.setState({ changingRow });\r\n    }\r\n\r\n    handleDelete(e) {\r\n        e.target.classList.toggle(\"is-loading\");\r\n        let enviroment = this;\r\n        let pkField = { key: this.state.changingRow[0].key, value: this.state.pkField };\r\n        fetch(`/delete/${this.props.table}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(Object.assign({}, { pkField, login: localStorage.getItem('login') })),\r\n        }).then((res) => {\r\n            if (res.status === 200) {\r\n                e.target.classList.toggle(\"is-loading\");\r\n                enviroment.props.updateTable();\r\n                enviroment.props.handleClosingModal();\r\n            } else {\r\n                e.target.classList.toggle(\"is-loading\");\r\n                alert(\"Ошибка удаления!\");\r\n            }\r\n        })\r\n    }\r\n\r\n    handleCommitTransaction(e) {\r\n        let login = { login: localStorage.getItem('login') };\r\n        fetch(`/transaction/commit`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(login)\r\n        }).then(() => this.props.handleClosingModal()).catch(err => console.log(err))\r\n    }\r\n\r\n    handleUpdating(e) {\r\n        let changingRow = this.state.changingRow;\r\n        if (!!this.props.primaryKeys.filter(item => `${item}` === `${changingRow[0].value}`).length && changingRow[0].value !== this.state.pkField) {\r\n            alert(\"Вы ввели существующий первичный ключ!\");\r\n            return;\r\n        }\r\n        e.target.classList.toggle(\"is-loading\");\r\n        let enviroment = this;\r\n        let pkField = { key: changingRow[0].key, value: this.state.pkField };\r\n        let body = Object.assign({}, { changingRow, pkField, login: localStorage.getItem('login') });\r\n        fetch(`/change/${this.props.table}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(body),\r\n        }).then((res) => {\r\n            if (res.status === 200) {\r\n                e.target.classList.toggle(\"is-loading\");\r\n                enviroment.props.updateTable();\r\n                enviroment.props.handleClosingModal();\r\n            } else {\r\n                e.target.classList.toggle(\"is-loading\");\r\n                return res.json(); //throwing err message\r\n            };\r\n        }).then(err => {\r\n            if (err.mes === \"В данный момент таблица редактируется!\") alert(err.mes)\r\n            else {\r\n                alert(`Некорректное значение поля: ${err.key}`);\r\n                document.getElementById(err.key).classList.toggle(\"is-danger\").focus();\r\n            }\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        let title = getTitle(this.props.table);\r\n        let changingRow = this.state.changingRow;\r\n        return (\r\n            <div class=\"modal is-active\">\r\n                <div class=\"modal-background\"></div>\r\n                <div class=\"modal-card\">\r\n                    <header class=\"modal-card-head\">\r\n                        <p class=\"modal-card-title\">Окно редактирования {title}</p>\r\n                        <button class=\"delete\" aria-label=\"close\" onClick={this.props.handleClosingModal}></button>\r\n                    </header>\r\n                    <section class=\"modal-card-body\">\r\n                        {changingRow.map((element, idx) =>\r\n                            <ModalField\r\n                                table={this.props.table}\r\n                                handleChange={this.handleChange}\r\n                                key={element.key} idx={idx}\r\n                                title={element.key}\r\n                                value={element.value}>\r\n                            </ModalField>)}\r\n                    </section>\r\n                    <footer class=\"modal-card-foot\">\r\n                        <button class=\"button is-success\" onClick={this.handleUpdating}>Сохранить изменения</button>\r\n                        <button class=\"button is-danger\" onClick={this.handleDelete}>Удалить запись</button>\r\n                        <button class=\"button\" onClick={this.props.handleClosingModal}>Отмена</button>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default changingValuesTable","import React from \"react\";\r\nimport ModalField from './ModalField'\r\n\r\nfunction getTitle(table) {\r\n    switch (table) {\r\n        case \"abonent\":\r\n            return \"абонента\";\r\n        case \"executor\":\r\n            return \"исполнителя\";\r\n        case \"disrepair\":\r\n            return \"неисправности\";\r\n        case \"street\":\r\n            return \"улицы\";\r\n        case \"service\":\r\n            return \"услуги\";\r\n        case \"nachislSumma\":\r\n            return \"начисления\";\r\n        case \"paySumma\":\r\n            return \"оплаты\";\r\n        case \"request\":\r\n            return \"заявки\";\r\n        default:\r\n            return \"строки\"\r\n    }\r\n}\r\n\r\nclass addingRowTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { changingRow: [] };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleAdding = this.handleAdding.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let changingRow = [];\r\n        this.props.keys.forEach(key => changingRow.push({ key, value: key === \"EXECUTED\" ? 0 : null }))\r\n        this.setState({ changingRow });\r\n    }\r\n\r\n    handleChange(idx, value) {\r\n        let changingRow = this.state.changingRow;\r\n        changingRow[idx].value = typeof changingRow[idx].value === 'number' ? +value : value;\r\n        this.setState({ changingRow });\r\n    }\r\n\r\n    handleAdding(e) {\r\n        let changingRow = this.state.changingRow;\r\n        if (!!this.props.primaryKeys.filter(item => `${item}` === `${changingRow[0].value}`).length) {\r\n            alert(\"Вы ввели существующий первичный ключ!\");\r\n            return;\r\n        }\r\n        if (changingRow[0].value === null) {\r\n            alert(\"Введите первичный ключ!\");\r\n            return;\r\n        }\r\n        // if (this.props.table === \"request\" && changingRow[6].value === null) {\r\n        //     alert(\"Установите значение в поле EXECUTED!\");\r\n        //     document.getElementById(\"EXECUTED\").classList.toggle(\"is-danger\");\r\n        //     return;\r\n        // }\r\n        e.target.classList.toggle(\"is-loading\");\r\n        let enviroment = this;\r\n        let body = Object.assign({}, { changingRow, login: localStorage.getItem('login') });\r\n        fetch(`/add/${this.props.table}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(body),\r\n        }).then((res) => {\r\n            if (res.status === 200) {\r\n                e.target.classList.toggle(\"is-loading\");\r\n                enviroment.props.updateTable();\r\n                enviroment.props.handleClosingModal();\r\n            } else {\r\n                e.target.classList.toggle(\"is-loading\");\r\n                return res.json();//throwing err message\r\n            };\r\n        }).then(err => {\r\n            if (err.mes === \"В данный момент таблица редактируется!\") alert(err.mes)\r\n            else {\r\n                alert(err.sqlMessage);\r\n                err.key = err.sqlMessage.split(\" \")[6];\r\n                console.log(err.key);\r\n                document.getElementById(err.key).classList.toggle(\"is-danger\").focus();\r\n            }\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        let title = getTitle(this.props.table);\r\n        let changingRow = this.state.changingRow;\r\n        return (\r\n            <div class=\"modal is-active\">\r\n                <div class=\"modal-background\"></div>\r\n                <div class=\"modal-card\">\r\n                    <header class=\"modal-card-head\">\r\n                        <p class=\"modal-card-title\">Окно добавления {title}</p>\r\n                        <button class=\"delete\" aria-label=\"close\" onClick={this.props.handleClosingModal}></button>\r\n                    </header>\r\n                    <section class=\"modal-card-body\">\r\n                        {changingRow.map((element, idx) =>\r\n                            <ModalField\r\n                                table={this.props.table}\r\n                                handleChange={this.handleChange}\r\n                                key={element.key} idx={idx}\r\n                                title={element.key}\r\n                                value={element.value}\r\n                                action={\"add\"}>\r\n                            </ModalField>)}\r\n                    </section>\r\n                    <footer class=\"modal-card-foot\">\r\n                        <button class=\"button is-success\" onClick={this.handleAdding}>Добавить запись</button>\r\n                        <button class=\"button\" onClick={this.props.handleClosingModal}>Отмена</button>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default addingRowTable","\r\nimport React from \"react\";\r\nimport Row from \"./Row\";\r\nimport THead from './THead';\r\nimport ChangingRowTable from './ChangingRowTable'\r\nimport AddingRowTable from './AddingRowTable'\r\n\r\nfunction sortingRows(rows) {\r\n    if (this.state.sortedBy === \"Fio\" || this.state.sortedBy.includes(\"DATE\")) {\r\n        rows.sort((a, b) => {\r\n            if (this.state.sortDirection === 'down to up') return b[this.state.sortedBy] > a[this.state.sortedBy] ? 1 : -1;\r\n            return a[this.state.sortedBy] > b[this.state.sortedBy] ? 1 : -1;\r\n        })\r\n    } else if (this.state.sortedBy) rows.sort((a, b) => {\r\n        if (this.state.sortDirection === 'down to up') return b[this.state.sortedBy] - a[this.state.sortedBy]\r\n        return a[this.state.sortedBy] - b[this.state.sortedBy];\r\n    })\r\n}\r\n\r\nclass Table extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            response: [],\r\n            rows: [],\r\n            sortedBy: \"\",\r\n            sortDirection: \"\",\r\n            numRowChanging: false,\r\n            isAdding: false,\r\n        };\r\n        this.handleChangeRow = this.handleChangeRow.bind(this);\r\n        this.handleSorting = this.handleSorting.bind(this);\r\n        this.handleClosingModal = this.handleClosingModal.bind(this);\r\n        this.updateTable = this.updateTable.bind(this);\r\n        this.handleAddingRow = this.handleAddingRow.bind(this);\r\n        this.createTransaction = this.createTransaction.bind(this);\r\n        this.commitTransaction = this.commitTransaction.bind(this);\r\n    }\r\n\r\n    updateTable() {\r\n        this.setState({ isLoaded: false });\r\n        let login = { login: localStorage.getItem('login') };\r\n        fetch(`/table/${this.props.table}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(login)\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result.message) {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error: { message: result.message }\r\n                    });\r\n                } else {\r\n                    let rows = [];\r\n                    for (let value of Object.values(result.recordset)) rows.push(value);\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        response: result,\r\n                        rows\r\n                    });\r\n                }\r\n            }, error => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n            )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateTable();\r\n    }\r\n\r\n    handleChangeRow(idx) {\r\n        this.createTransaction().then(() =>\r\n            this.setState({ numRowChanging: idx })\r\n        );\r\n    }\r\n\r\n    handleClosingModal(e) {\r\n        let login = { login: localStorage.getItem('login') };\r\n        fetch(`/closeConnection`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(login)\r\n        })\r\n        this.setState({ numRowChanging: null, isAdding: false })\r\n    }\r\n\r\n    handleAddingRow() {\r\n        this.createTransaction().then(() =>\r\n            this.setState(prevState => ({ isAdding: !prevState.isAdding }))\r\n        );\r\n    }\r\n\r\n    createTransaction() {\r\n        let login = { login: localStorage.getItem('login'), table: this.props.table };\r\n        return fetch(`/transaction/create`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(login)\r\n        })\r\n    }\r\n\r\n    commitTransaction() {\r\n        let login = { login: localStorage.getItem('commit') };\r\n        return fetch(`/transaction/commit`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(login)\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    handleSorting(e) {\r\n        this.setState({ sortedBy: e.target.title });\r\n        if (e.target.classList.contains('has-background-warning')) this.setState({ sortDirection: 'down to up' })\r\n        else this.setState({ sortDirection: 'up to down' })\r\n    }\r\n\r\n    render() {\r\n        console.log(localStorage.getItem('login'));\r\n        const { error, isLoaded, response } = this.state;\r\n        if (error) {\r\n            return <div>Ошибка: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Загрузка...</div>;\r\n        } else {\r\n            let rows = this.state.rows;\r\n            sortingRows.call(this, rows);\r\n            let primaryKeys = rows.map(row => Object.values(row)[0]);\r\n            return (\r\n                <div style={{ 'padding': '10vh 10vw', 'width': '100vw', 'maxHeight': '100vh', 'overflowY': 'auto', \"minHeight\": \"10vh\" }}>\r\n                    <table class=\"table is-hoverable is-size-6 is-fullwidth is-bordered has-background-light\" style={{ \"virticalAlign\": \"auto\", \"margin\": \"0\" }}>{/* is-fullwidth */}\r\n                        <thead>\r\n                            <tr>\r\n                                <THead titles={response.titles} handleSorting={this.handleSorting}></THead>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows.map((item, idx) => <Row item={item} key={idx} rowNum={idx} handleChangeRow={this.handleChangeRow}></Row>)}\r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                {response.titles.map((item, idx) => { return <th title={item} key={idx}>{item}</th> })}\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                    {this.state.numRowChanging || this.state.numRowChanging === 0 ?\r\n                        <ChangingRowTable\r\n                            handleClosingModal={this.handleClosingModal}\r\n                            table={this.props.table}\r\n                            rows={this.state.rows}\r\n                            numRowChanging={this.state.numRowChanging}\r\n                            updateTable={this.updateTable}\r\n                            primaryKeys={primaryKeys}\r\n                        >\r\n                        </ChangingRowTable> : null} {/*Модальное окно, класс is-active*/}\r\n                    <button\r\n                        className=\"addButton button is-primary\"\r\n                        onClick={this.handleAddingRow}\r\n                    ></button>\r\n                    {this.state.isAdding ?\r\n                        <AddingRowTable\r\n                            handleClosingModal={this.handleClosingModal}\r\n                            table={this.props.table}\r\n                            keys={Object.keys(this.state.rows[0])}\r\n                            updateTable={this.updateTable}\r\n                            primaryKeys={primaryKeys}\r\n                        >\r\n                        </AddingRowTable> : null\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Table\r\n","import { Redirect } from \"react-router-dom\";\r\nimport React from 'react';\r\n\r\nclass LogInButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isLoggedIn: false };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        let login = document.getElementById(\"login\").value;\r\n        let pass = document.getElementById(\"pass\").value;\r\n        fetch(\"/authentification\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify({ login, pass })\r\n        }).then(res => {\r\n            if (!res.ok) {\r\n                this.setState({ isLoggedId: false });\r\n                res.json().then(alert)\r\n            } else {\r\n                localStorage.setItem('login', login);\r\n                this.props.changeAuth();\r\n                this.setState({ isLoggedId: true });\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoggedIn) {\r\n            return <Redirect to={\"/\"} />\r\n        }\r\n        return (\r\n            <button className={this.props.className} style={this.props.style} onClick={this.handleClick}>{this.props.children}</button>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LogInButton","import React from \"react\";\r\nimport LogInButton from './LogInButton';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Authentification extends React.Component {\r\n    render() {\r\n        return (\r\n            <div class=\"card cardClass\">\r\n                <header className=\"card-header \">\r\n                    <p className=\"card-header-title\" style={{ 'fontWeight': '500' }}>\r\n                        Форма авторизации\r\n                    </p>\r\n                    <a href=\"/\" className=\"card-header-icon\" aria-label=\"more options\">\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                    </a>\r\n                </header>\r\n                <div class=\"card-content\">\r\n                    <div class=\"content\">\r\n                        <div style={{ 'marginBottom': '1em' }}>\r\n                            <p style={{ 'marginBottom': '2px', 'textAlign': 'left' }}>Введите логин</p>\r\n                            <div class=\"field\">\r\n                                <input class=\"input\" type=\"email\" placeholder=\"Логин\" id={\"login\"} />\r\n                            </div>\r\n                            <p style={{ 'marginBottom': '2px', 'textAlign': 'left' }}>Введите пароль</p>\r\n                            <div class=\"field\">\r\n                                <input class=\"input\" type=\"password\" placeholder=\"Пароль\" id={\"pass\"} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <footer>\r\n                        <LogInButton changeAuth={this.props.changeAuth} className={\"button is-primary\"} style={{ 'marginRight': '1em' }}>\r\n                            <strong>Войти</strong>\r\n                        </LogInButton>\r\n                        <Link to=\"/registration\">\r\n                            <button className=\"button is-light\">\r\n                                Зарегистрироваться\r\n                            </button>\r\n                        </Link>\r\n                    </footer>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Authentification;\r\n","import { Redirect } from \"react-router-dom\";\r\nimport React from 'react';\r\n\r\nclass LogInButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isRegistred: false };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        let login = document.getElementById(\"login\").value;\r\n        let pass = document.getElementById(\"pass\").value;\r\n        fetch(\"/registration\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify({ login, pass })\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                this.setState({ isRegistred: true });\r\n            } else {\r\n                this.setState({ isRegistred: false });\r\n            }\r\n            return res.json()\r\n        }).then(alert);\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.isRegistred)\r\n        if (this.state.isRegistred) {\r\n            return <Redirect push to={\"/\"} />\r\n        }\r\n        return (\r\n            <button className={this.props.className} onClick={this.handleClick}>{this.props.children}</button>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LogInButton","import React from \"react\";\r\nimport SignUpButton from './SignUpButton'\r\n\r\nclass Registration extends React.Component {\r\n    render() {\r\n        return (\r\n            <div class=\"card cardClass\">\r\n                <header class=\"card-header \">\r\n                    <p class=\"card-header-title\" style={{ 'font-weight': '500' }}>\r\n                        Форма регистрации\r\n                    </p>\r\n                    <a href=\"/\" class=\"card-header-icon\" aria-label=\"more options\">\r\n                        <span class=\"icon\">\r\n                            <i class=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                    </a>\r\n                </header>\r\n                <div class=\"card-content\">\r\n                    <div class=\"content\">\r\n                        <div style={{ 'margin-bottom': '1em' }}>\r\n                            <p style={{ 'margin-bottom': '2px', 'text-align': 'left' }}>Придумайте логин</p>\r\n                            <input class=\"input is-hovered\" type=\"email\" placeholder=\"Логин\" id=\"login\"></input>\r\n                        </div>\r\n                        <div class=\"password\">\r\n                            <p style={{ 'margin-bottom': '2px', 'text-align': 'left' }}>Придумайте пароль</p>\r\n                            <input class=\"input is-hovered\" type=\"password\" placeholder=\"Введите пароль\" id=\"pass\"></input>\r\n                        </div>\r\n                    </div>\r\n                    <footer>\r\n                        <SignUpButton className={\"button is-primary\"}>\r\n                            <strong>Зарегистрироваться</strong>\r\n                        </SignUpButton>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Registration;","import React from 'react'\r\nimport Table from './Table';\r\nimport Authentification from './Authentification';\r\nimport Registration from './Registration';\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\nclass Router extends React.Component {\r\n\r\n    render() {\r\n        if (this.props.auth) {\r\n            return (\r\n                <Switch>\r\n                    <Route path=\"/table/\">\r\n                        <Table key={this.props.table} table={this.props.table}></Table>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Redirect to=\"/table/\"></Redirect>\r\n                    </Route>\r\n                </Switch>\r\n            )\r\n        } else {\r\n            return (\r\n                <Switch>\r\n                    <Route path=\"/\">\r\n                        <Authentification changeAuth={this.props.changeAuth} />\r\n                    </Route>\r\n                    <Route path=\"/registration\">\r\n                        <Registration />\r\n                    </Route>\r\n                </Switch>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Router;","import { NavLink } from \"react-router-dom\";\r\n\r\nfunction NavbarLinks(props) {\r\n    const navLinkStyle = { color: \"#00D1B2\", textDecoration: \"underline\" }\r\n    return (\r\n        <div class=\"navbar-start\">\r\n            <NavLink className=\"navbar-item\" to=\"/table/abonent\" activeStyle={navLinkStyle} onClick={() => props.changeTable(\"abonent\")}>Абоненты</NavLink>\r\n            <NavLink className=\"navbar-item\" to=\"/table/executor\" activeStyle={navLinkStyle} onClick={() => props.changeTable(\"executor\")}>Исполнители</NavLink>\r\n            <NavLink className=\"navbar-item\" to=\"/table/disrepair\" activeStyle={navLinkStyle} onClick={() => props.changeTable(\"disrepair\")}>Неисправности</NavLink>\r\n            <NavLink className=\"navbar-item\" to=\"/table/street\" activeStyle={navLinkStyle} onClick={() => props.changeTable(\"street\")}>Улицы</NavLink>\r\n            <NavLink className=\"navbar-item\" to=\"/table/services\" activeStyle={navLinkStyle} onClick={() => props.changeTable(\"service\")}>Услуги</NavLink>\r\n            <NavLink className=\"navbar-item\" to=\"/table/nachislSumma\" activeStyle={navLinkStyle} onClick={() => props.changeTable(\"nachislSumma\")}>Начисления</NavLink>\r\n            <NavLink className=\"navbar-item\" to=\"/table/paySumma\" activeStyle={navLinkStyle} onClick={() => props.changeTable(\"paySumma\")}>Оплаты</NavLink>\r\n            <NavLink className=\"navbar-item\" to=\"/table/request\" activeStyle={navLinkStyle} onClick={() => props.changeTable(\"request\")}>Заявки</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default NavbarLinks;","import { Link } from \"react-router-dom\";\r\nfunction NavbarLogin(props) {\r\n\r\n    let logoutHandler = async function () {\r\n        // let login = { login: localStorage.getItem('login') };\r\n        // await fetch(`/closeConnection`, {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json;charset=utf-8'\r\n        //     },\r\n        //     body: JSON.stringify(login)\r\n        // }).catch(err => console.log(err))\r\n        localStorage.removeItem('login');\r\n        props.changeAuth();\r\n    }\r\n\r\n    if (props.auth) {\r\n        return (\r\n            <div class=\"navbar-end\">\r\n                <div class=\"navbar-item\">\r\n                    <div class=\"buttons\">\r\n                        <Link to=\"/\">\r\n                            <button class=\"button is-primary\" onClick={logoutHandler}><strong>Выйти</strong></button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div class=\"navbar-end\">\r\n            <div class=\"navbar-item\">\r\n                <div class=\"buttons\">\r\n                    <Link to=\"/\"> {/* Компонент Authentification */}\r\n                        <button className=\"button is-primary\" style={{ \"marginRight\": \"5px\" }}><strong>Войти</strong></button>\r\n                    </Link>\r\n                    <Link to=\"/registration\">             {/* Компонент Registration */}\r\n                        <button className=\"button is-light\">Зарегистрироваться</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default NavbarLogin;","import './App.css';\r\nimport React from 'react';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Router from './Router'\r\nimport NavbarLinks from './NavbarLinks'\r\nimport NavbarLogin from './NavbarLogin'\r\n\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isAuthentificated: false, table: 'abonent' };\r\n        this.changeAuth = this.changeAuth.bind(this);\r\n        this.changeTable = this.changeTable.bind(this);\r\n        this.handleBurger = this.handleBurger.bind(this);\r\n    }\r\n\r\n    changeAuth() {\r\n        this.setState((prevState) => ({ isAuthentificated: !prevState.isAuthentificated }))\r\n    }\r\n\r\n    changeTable(table) {\r\n        this.setState({ table })\r\n    }\r\n\r\n    handleBurger() {\r\n        document.getElementById(\"burger\").classList.toggle(\"is-active\");\r\n        document.querySelector(\".navbar-menu\").classList.toggle(\"is-active\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('login')) {\r\n            //console.log(localStorage.getItem('login'));\r\n            this.setState({ isAuthentificated: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\" >\r\n                <BrowserRouter>\r\n                    <nav class=\"navbar is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\r\n                        <div class=\"navbar-brand\">\r\n                            <div onClick={this.handleBurger} role=\"button\" className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\" id=\"burger\">\r\n                                <span aria-hidden=\"true\"></span>\r\n                                <span aria-hidden=\"true\"></span>\r\n                                <span aria-hidden=\"true\"></span>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\r\n                            {this.state.isAuthentificated ? <NavbarLinks changeTable={this.changeTable}></NavbarLinks> : null}\r\n                            <NavbarLogin auth={this.state.isAuthentificated} changeAuth={this.changeAuth}></NavbarLogin>\r\n                        </div>\r\n                    </nav>\r\n                    <div className=\"App-header\">\r\n                        <Router auth={this.state.isAuthentificated} changeAuth={this.changeAuth} table={this.state.table}></Router>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Main;","import './App.css';\r\nimport React from 'react';\r\nimport Main from './Main'\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\" >\r\n      <Main></Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}